import datetime as dt
import pandas as pd
import pandas_datareader.data as web
from datetime import date
from arch import arch_model
import matplotlib.pyplot as plt
import requests
import zipfile as zi 
import io

start = dt.datetime(2000, 1, 2)
end = dt.datetime(2018,12,31)

sp500 = web.DataReader('^GSPC', 'yahoo', start=start, end=end)

returns = 100 * sp500['Adj Close'].pct_change().dropna()
returns.head()

%matplotlib inline
import seaborn
seaborn.set_style('darkgrid')
In [2]: seaborn.mpl.rcParams['figure.figsize'] = (14.0, 8.0)
seaborn.mpl.rcParams['savefig.dpi'] = 90
seaborn.mpl.rcParams['font.family'] = 'serif'
seaborn.mpl.rcParams['font.size'] = 10

plt.plot(returns, 'gold')
plt.title('Histogram of daily returns')
plt.grid(True)
plt.show()

%the standard garch model:
am = arch_model(returns, vol='Garch', p=1, o=0, q=1, dist='Normal')
print(am)
res = am.fit()
print(res.summary())

%the gjr-garch model:
am = arch_model(returns, vol='Garch', p=1, o=1, q=1, dist='Normal')
print(am)
res = am.fit()
print(res.summary())

%the tarch model:
am = arch_model(returns, vol='Garch', p=1, o=0, q=1,power=1.0, dist='Normal')
print(am)
res = am.fit()
print(res.summary())

%the parch model:
am = arch_model(returns, vol='Garch', p=1, o=0, q=1,power=3.0 dist='Normal')
print(am)
res = am.fit()
print(res.summary())

%the aparch model:
am = arch_model(returns, vol='Garch', p=1, o=1, q=1, power=3.0, dist='Normal')
print(am)
res = am.fit()
print(res.summary())

